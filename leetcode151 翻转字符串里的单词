给定一个字符串，逐个翻转字符串中的每个单词。

说明：
无空格字符构成一个 单词 。
输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。
如果两个单词间有多余的空格，将反转后单词间的空格减少到只含一个。
 

示例：
输入："  hello   world!  "
输出："world! hello"

代码示意：
一、正则+JS API
var reverseWords = function(s) {
   return s.trim().split(/\s+/g).reverse().join(" ");
};
二、双端队列
var reverseWords = function(s) {
    if(s=== '') return s;
    let left =0,right = s.length-1;
    //1.去除头尾空格
    while(s.charAt(left) === ' ') left++;
    while(s.charAt(right) === ' ') right--;
    //2. 对字符串进行切割 将分割出来的单词从首部压入队列（实现reverse）
    let word='',deque=[],char;
    while(left<=right){
         char = s.charAt(left);
         if(char===' ' && word){
             deque.unshift(word);
             word='';
         }else if(char!==' '){//注意这里 排除空格加入word
             word += s.charAt(left);
         }
         left++;
    }
    //别忘了将最后一个单词加入单词数组
    deque.unshift(word);
    //3.一个空格拼接 将数组转化成字符串输出
    return deque.join(" ");  
};


